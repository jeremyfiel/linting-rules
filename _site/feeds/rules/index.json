
[{

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "version-semantic":{"description":"The API version field should follow\n[semantic versioning](https://semver.org/#semantic-versioning-specification-semver).","severity":"error","recommended":true,"message":"Specs should follow semantic versioning. {{value}} is not a valid version.","given":"$.info.version","then":{"function":"pattern","functionOptions":null,"match":"^[0-9]+.[0-9]+.[0-9]+(-[a-z0-9+.-]+)?"},"x-status":"draft","x-tags":["Tag"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "allowed-date-format":{"description":"String properties with the date format must end in Date.","given":"$..properties.[?(@.format==\"date\" && @.type==\"string\")]~","then":{"function":"pattern","functionOptions":{"match":"((d)|(.D))ate$"}}},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "allowed-integer-format-oas3":{"description":"To improve interoperability, integer and number formats are constrained\nto a shared subset.  See recommendation RAC_REST_FORMAT_004.","message":"Type format is \"{{value}}\", expected one of [int32, int64]. {{path}}","formats":["oas3"],"severity":"hint","recommended":true,"given":"$.[?(@.type==\"integer\")]\n","then":{"field":"format","function":"enumeration","functionOptions":{"values":["int32","int64"]}},"x-status":"draft","x-tags":["Numbers","Formats"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "allowed-integer-format":{"x-tags":["Numbers","Formats"],"description":"To improve interoperability, integer and number formats are constrained\nto a shared subset.  See recommendation RAC_REST_FORMAT_004.","message":"Type format is \"{{value}}\", expected one of [int32, int64]. {{path}}","formats":["oas3"],"severity":"hint","recommended":true,"given":"$.[?(@.type==\"integer\")]\n","then":{"field":"format","function":"enumeration","functionOptions":{"values":["int32","int64"]}},"x-status":"draft"},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "allowed-number-format-oas3":{"description":"To improve interoperability, integer and number formats are constrained\nto a shared subset. See recommendation RAC_REST_FORMAT_004.","message":"Type format is \"{{value}}\", expected one of [decimal32, decimal64, decimal128, float, double]. {{path}}","formats":["oas3"],"severity":"hint","recommended":true,"given":"$.[?(@.type==\"number\")]\n","then":{"field":"format","function":"enumeration","functionOptions":{"values":["decimal32","decimal64","float","double","decimal128"]}},"x-status":"draft","x-tags":["Numbers","Formats"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "allowed-number-format":{"x-tags":["Numbers","Formats"],"description":"To improve interoperability, integer and number formats are constrained\nto a shared subset. See recommendation RAC_REST_FORMAT_004.","message":"Type format is \"{{value}}\", expected one of [decimal32, decimal64, decimal128, float, double]. {{path}}","formats":["oas3"],"severity":"hint","recommended":true,"given":"$.[?(@.type==\"number\")]\n","then":{"field":"format","function":"enumeration","functionOptions":{"values":["decimal32","decimal64","float","double","decimal128"]}},"x-status":"draft"},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "api-home-get":{"description":"APIs root path MUST have a GET defined,.","formats":["oas2","oas3"],"given":"$.paths[/]","severity":"warn","then":{"field":"get","function":"truthy"},"x-status":"draft","x-tags":["Tag"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "array-boundaries-oas3":{"description":"Array size should be limited to mitigate resource exhaustion attacks. This can be done using `maxItems` and `minItems`, like in the example below. You should ensure that the schema referenced in  `items` is constrained too.  If you delegate input validation to a library or framework, be sure to test it thoroughly and ensure that it verifies `maxItems`.","message":"Schema of type array must specify maxItems and minItems. {{path}} {{error}}","formats":["oas3"],"severity":"warn","recommended":true,"given":["$.[?(@.type==\"array\")]"],"then":[{"field":"maxItems","function":"defined"},{"field":"minItems","function":"defined"}],"x-status":"draft","x-tags":["Tag","Arrays","Security"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "array-object-example-oas3":{"severity":"error","message":"Did not expect {{property}}at {{path}}. Define example data on each property in the object instead","given":"$.paths.*.*.requestBody..[?(@.items)][?(@.type == 'object')]","formats":["oas3"],"then":[{"field":"example","function":"falsy"}],"x-status":"draft","x-tags":["Tag","Arrays"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "check-for-use-of-anyof":{"description":"API Connect has a compatibility issue with the anyOf functionality. Avoid its use if reasonably possible.","given":"$..","severity":"warn","then":{"field":"anyOf","function":"falsy"},"x-status":"draft","x-tags":["Tag"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "check-for-use-of-oneof":{"description":"API Connect has a compatibility issue with the oneOf functionality.","given":"$..","severity":"warn","then":{"field":"oneOf","function":"falsy"},"x-status":"draft","x-tags":["Tag"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "components-callbacks-camelcase":{"description":"All callbacks should be named with UpperCamelCase","message":"{{property}} is not UpperCamelCase. {{description}}. Fix by renaming the callback, eg. object -> Object.","given":"$.components.callbacks","severity":"error","then":{"field":"@key","function":"casing","functionOptions":{"type":"pascal","separator":{"char":".","allowLeading":false}}},"x-status":"draft","x-tags":["Tag"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "components-examples-camelcase":{"description":"All examples should be named with UpperCamelCase","message":"{{property}} is not UpperCamelCase. {{description}}. Fix by renaming the example, eg. object -> Object.","given":"$.components.examples","severity":"error","then":{"field":"@key","function":"casing","functionOptions":{"type":"pascal","separator":{"char":".","allowLeading":false}}},"x-status":"draft","x-tags":["Tag"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "components-headers-pascal-case":{"description":"All responses should be named with UpperCamelCase","message":"{{property}} is not UpperCamelCase. {{description}}. Fix by renaming the definition, eg. object -> Object.","given":"$.components.headers","severity":"error","then":{"field":"@key","function":"casing","functionOptions":{"type":"pascal","separator":{"char":".","allowLeading":false}}},"x-status":"draft","x-tags":["Tag"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "components-links-pascal-case":{"description":"All links should be named with UpperCamelCase","message":"{{property}} is not UpperCamelCase. {{description}}. Fix by renaming the link, eg. object -> Object.","given":"$.components.links","severity":"error","then":{"field":"@key","function":"casing","functionOptions":{"type":"pascal","separator":{"char":".","allowLeading":false}}},"x-status":"draft","x-tags":["Tag"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "components-parameters-camel-case":{"description":"All parameter names should be lowerCamelCase","message":"{{value}} is not lowerCamelCase. {{description}}. Fix by renaming the parameter, eg. ParameterName -> parameterName.","given":"$.components.parameters..[?(@.in==='query' || @.in==='path' || @.in==='cookie')]","severity":"warn","then":{"field":"name","function":"casing","functionOptions":{"type":"camel"}},"x-status":"draft","x-tags":["Tag"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "components-parameters-prefix-in-cookie":{"description":"Parameters should be in a location matching the prefix (Cookie.)","message":"{{value}} does not match the parameter prefix. {{description}}. Fix by assigning the correct in value, eg. header -> cookie.","given":"$.components.parameters..[?(@property.match(/^Cookie\\./))]","severity":"error","then":{"field":"in","function":"pattern","functionOptions":{"match":"^cookie$"}},"x-status":"draft","x-tags":["Tag"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "components-parameters-prefix-in-header":{"description":"Parameters should be in a location matching the prefix (Header.)","message":"{{value}} does not match the parameter prefix. {{description}}. Fix by assigning the correct in value, eg. path -> header.","given":"$.components.parameters..[?(@property.match(/^Header\\./))]","severity":"error","then":{"field":"in","function":"pattern","functionOptions":{"match":"^header$"}},"x-status":"draft","x-tags":["Tag"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "components-parameters-prefix-in-path":{"description":"Parameters should be in a location matching the prefix (Path.)","message":"{{value}} does not match the parameter prefix. {{description}}. Fix by assigning the correct in value, eg. header -> path.","given":"$.components.parameters..[?(@property.match(/^Path\\./))]","severity":"error","then":{"field":"in","function":"pattern","functionOptions":{"match":"^path$"}},"x-status":"draft","x-tags":["Tag"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "components-parameters-prefix-in-query":{"description":"Parameters should be in a location matching the prefix (Query.)","message":"{{value}} does not match the parameter prefix. {{description}}. Fix by assigning the correct in value, eg. header -> query.","given":"$.components.parameters..[?(@property.match(/^Query\\./))]","severity":"error","then":{"field":"in","function":"pattern","functionOptions":{"match":"^query$"}},"x-status":"draft","x-tags":["Tag"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "components-request-and-response-body-oas3":{"description":"Response and requestBody content schema $ref may only point to elements in the components object within document.","severity":"error","resolved":false,"given":["$..responses.*.content..*.schema.$ref","$..requestBody.content..*.schema.$ref"],"then":{"function":"pattern","functionOptions":{"match":"#/components/"}},"x-status":"draft","x-tags":["Tag"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "components-request-bodies-pascal-case":{"description":"All definitions should be named with UpperCamelCase","message":"{{property}} is not UpperCamelCase. {{description}}. Fix by renaming the definition, eg. object -> Object.","given":"$.components.requestBodies","severity":"error","then":{"field":"@key","function":"casing","functionOptions":{"type":"pascal","separator":{"char":".","allowLeading":false}}},"x-status":"draft","x-tags":["Tag"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "components-responses-pascal-case":{"description":"All responses should be named with UpperCamelCase","message":"{{property}} is not UpperCamelCase. {{description}}. Fix by renaming the definition, eg. object -> Object.","given":"$.components.responses","severity":"error","then":{"field":"@key","function":"casing","functionOptions":{"type":"pascal","separator":{"char":".","allowLeading":false}}},"x-status":"draft","x-tags":["Tag"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "components-security-schema-sigv4":{"description":"Please provide a sigv4 for securitySchemes.","severity":"error","given":"$..components.securitySchemes","then":{"field":"sigv4","function":"truthy"},"x-status":"draft","x-tags":["Tag"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "components-security-schemes-access-token":{"description":"The access token is provided according to OIDC specifications","message":"type should be openIdConnect. {{description}}.","given":"$.components.securitySchemes[Oidc.AccessToken]","severity":"error","then":{"field":"type","function":"pattern","functionOptions":{"match":"^openIdConnect$"}},"x-status":"draft","x-tags":["Tag"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "components-security-schemes-api-key":{"description":"The client ID should be an apiKey in a header with the name X-api-key","message":"{{property}} {{value}} does not match the value expected by the gateway.","given":"$.components.securitySchemes[Keys.ClientId]","severity":"error","then":[{"field":"type","function":"pattern","functionOptions":{"match":"^apiKey$"}},{"field":"in","function":"pattern","functionOptions":{"match":"^header$"}},{"field":"name","function":"pattern","functionOptions":{"match":"^X-api-key$"}}],"x-status":"draft","x-tags":["Tag"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "components-security-schemes-api-secret":{"description":"The client ID should be an apiKey in a header with the name X-api-secret","message":"{{property}} {{value}} does not match the value expected by the gateway.","given":"$.components.securitySchemes[Keys.ClientId]","severity":"error","then":[{"field":"type","function":"pattern","functionOptions":{"match":"^apiKey$"}},{"field":"in","function":"pattern","functionOptions":{"match":"^header$"}},{"field":"name","function":"pattern","functionOptions":{"match":"^X-api-secret$"}}],"x-status":"draft","x-tags":["Tag"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "components-security-schemes-basic":{"description":"Consider a more secure alternative to HTTP Basic.","message":"HTTP Basic is a pretty insecure way to pass credentials around, please consider an alternative.","severity":"error","given":"$.components.securitySchemes[*]","then":{"field":"scheme","function":"pattern","functionOptions":null,"notMatch":"basic"},"x-status":"draft","x-tags":["Tag"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "components-security-schemes-oauth-implicit":{"description":"The API must contain the security mechanism OAuth2 implicit","message":"The API must contain the security mechanism type OAuth2 implicit","recommended":true,"severity":"error","formats":["oas3"],"type":"style","given":"$","then":{"field":"$.components.securitySchemes.[*].flows.implicit","function":"truthy"},"x-status":"draft","x-tags":["Tag"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "components-security-schemes-oauth-password":{"description":"The API must contain the security mechanism OAuth2 password","message":"The API must contain the security mechanism  OAuth2 password","recommended":true,"severity":"error","formats":["oas3"],"type":"style","given":"$","then":{"field":"$.components.securitySchemes.[*].flows.password","function":"truthy"},"x-status":"draft","x-tags":["Tag"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "components-security-schemes-oauth":{"description":"The API must contain the security mechanism OAuth2","message":"The API must contain the security mechanism OAuth2","recommended":true,"severity":"error","formats":["oas3"],"type":"style","given":"$","then":{"field":"$.components.securitySchemes.[*].type","function":"truthy"},"x-status":"draft","x-tags":["Tag"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "components-security-schemes-pascal-case":{"description":"All security schemes should be named with UpperCamelCase","message":"{{property}} is not UpperCamelCase. {{description}}. Fix by renaming the definition, eg. object -> Object.","given":"$.components.securitySchemes","severity":"error","then":{"field":"@key","function":"casing","functionOptions":{"type":"pascal","separator":{"char":".","allowLeading":false}}},"x-status":"draft","x-tags":["Tag"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "components-security-schemes-prefix":{"description":"Security schemes should be prefixed with their security type (Oidc., Csh. or Keys.)","message":"{{property}} is not prefixed properly. {{description}}. Fix by renaming the parameter definition, eg. AccessToken -> Oidc.AccessToken.","given":"$.components.securitySchemes","severity":"warn","then":{"field":"@key","function":"pattern","functionOptions":{"match":"^Keys\\.|^Oidc\\.|^Csh\\."}},"x-status":"draft","x-tags":["Tag"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "response-body-standard-oas2":{"description":"Ensure the get, put, and patch response body schemas are consistent.","formats":["oas2"],"given":"$.paths.*","message":"{{error}}","severity":"warn","then":{"function":"consistent-response-body"},"x-tags":["Tag"],"x-status":"draft"},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "constrained-additionalProperties":{"description":"By default, jsonschema allows additionalProperties. This means\nthat schema validators can be bypassed using further, unspecified\nfields. While forbidding additionalProperties can create rigidity and hinder\nthe evolution of an API - eg making it hard to accept new parameters\nor fields - it is possible that this flexibility can be used\nto bypass the schema validator and force the application to process\nunwanted information.","message":"Objects should not allow additionalProperties. Disable them with `additionalProperties: false` or constraint them.","formats":["oas3"],"severity":"warn","recommended":true,"given":["$.[?(@.type==\"object\" && @.additionalProperties &&  @.additionalProperties!=true &&  @.additionalProperties!=false )]"],"then":[{"field":"maxProperties","function":"defined"}],"x-status":"draft","x-tags":["Tag"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "consume-mime-type-oas2":{"description":"FHIR mime-type must be application/fhir+(xml|json|turtle) or application/x-www-form-urlencoded for search endpoints","severity":"error","recommended":true,"format":"oas2","given":"$..consumes.*","then":{"function":"schema","functionOptions":{"schema":{"type":"string","enum":["application/fhir+xml","application/fhir+json","application/fhir+turtle","application/x-www-form-urlencoded"]}}},"x-status":"draft","x-tags":["Tag"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "definitions-camelcase-alphanumeric":{"description":"All YAML/JSON definitions MUST follow fields-camelCase and be ASCII alphanumeric characters or _ or $.","given":"$.definitions[*]~","message":"{{property}} MUST follow camelCase and be ASCII alphanumeric characters or _ or $.","recommended":true,"severity":"error","then":{"function":"pattern","functionOptions":{"match":"/^[a-z$_]{1}[A-Z09$_]*/"}},"x-status":"draft","x-tags":["Tag","Adidas"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "definitions-example":{"description":"Examples must be valid against their defined schema.","formats":["oas2"],"given":"$..definitions..[?(@property !== 'properties' && @.example && (@.type || @.format || @.$ref))]","message":"{{error}}","recommended":true,"severity":0,"then":{"function":"schemaPath","functionOptions":{"field":"example","schemaPath":"$"}},"type":"validation","x-status":"draft","x-tags":["Tag"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "example-in-definitions-oas2":{"description":"Examples must be valid against their defined schema.","formats":["oas2"],"given":"$..definitions..[?(@property !== 'properties' && @.example && (@.type || @.format || @.$ref))]","message":"{{error}}","recommended":true,"severity":0,"then":{"function":"schemaPath","functionOptions":{"field":"example","schemaPath":"$"}},"type":"validation","x-status":"draft","x-tags":["Tag","Adidas"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "definitions-properties-boolean-name-oas2":{"description":"Checks for specific pattern in boolean property names.","severity":"error","message":"CONT03 Invalid property name for boolean type {{value}} (boolean may start with is or has and followed by capital letter or number to be more descriptive. expected isErased, hasStock)","recommended":true,"given":"$.definitions.*.properties..[?(@.type=='boolean')]~","then":{"function":"pattern","functionOptions":{"match":"^(is|has)[A-Z0-9][a-zA-Z0-9]*"}},"x-status":"draft","x-tags":["Tag"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "definitions-properties-maxlength":{"description":"Las propiedades de tipo cadena deben contener la propiedad maxLength (máxima longitud de cadena).","given":["$.definitions.*.properties.[?(@.type==\"string\")]","$.definitions.*.properties.[?(@.type==\"string\")]"],"message":"SWAG09 String-type properties MUST contain maxLength property (maximum length of string).","recommended":true,"severity":"info","then":{"field":"maxLength","function":"truthy"},"x-status":"draft","x-tags":["Tag"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "enum-values-upper-snake-case":{"message":"Enum values should be in UPPER_SNAKE_CASE format","description":"SHOULD declare enum values using UPPER_SNAKE_CASE format [240]","documentationUrl":"https://opensource.zalando.com/restful-api-guidelines/#240","severity":"warn","given":"$.paths..[?(@.type=='string')].[enum,x-extensible-enum].*","then":{"function":"pattern","functionOptions":{"match":"^[A-Z][A-Z_0-9]*$"}},"x-status":"draft","x-tags":["Tag"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "example-exists-in-parameters":{"description":"All models MUST have a valid example.","formats":["oas2"],"given":"$..parameters..[?(@.in == 'body' && (@.example || @.schema.$ref))]","message":"{{ property }} MUST have a valid example.","recommended":true,"severity":"error","then":{"function":"truthy"},"x-status":"draft","x-tags":["Tag"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "hosts-https-only-oas2":{"description":"ALL requests MUST go through `https` protocol only","severity":"error","formats":["oas2"],"type":"style","message":"Schemes MUST be https and no other value is allowed.","given":"$.schemes","then":{"function":"schema","functionOptions":null,"schema":{"type":"string","items":null,"enum":["https"],"maxItems":1}},"x-status":"draft","x-tags":["Tag"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "hosts-https-only-oas3":{"description":"ALL requests MUST go through `https` protocol only","formats":["oas3"],"severity":"error","message":"Servers MUST be https and no other protocol is allowed.","given":"$.servers..url","then":{"function":"pattern","functionOptions":null,"match":"/^https:/"},"x-status":"draft","x-tags":["Tag"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "info-contact-email":{"description":"API must have a contact email available.","given":"$.info.contact","severity":"error","then":{"field":"email","function":"truthy"},"x-status":"validated","x-tags":["Contact","Communication"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "info-contact-name":{"description":"API must have a contact name available.","given":"$.info.contact","severity":"error","then":{"field":"name","function":"truthy"},"x-status":"validated","x-tags":["Contact","Communication"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "info-contact-url":{"description":"API must have a contact url available.","given":"$.info.contact","severity":"error","then":{"field":"url","function":"truthy"},"x-status":"validated","x-tags":["Contact","Communication"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "info-contact":{"description":"API must have a contact information available.","given":"$.info","severity":"error","recommended":true,"type":"style","formats":["oas3"],"then":{"field":"contact","function":"truthy"},"x-status":"validated","x-tags":["Contact","Communication"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "info-description-max-length":{"description":"The description of the API must not be greater than 250 characters.","given":"$.info","severity":"error","recommended":true,"type":"style","formats":["oas3"],"then":{"field":"description","function":"length","functionOptions":{"max":250}},"x-status":"validated","x-tags":["Info","Length"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "info-description-word-check":{"description":"The API description must not contain specific words, including REST, Public, and Developer.","given":"$.info.description","severity":"error","recommended":true,"type":"style","formats":["oas3"],"then":{"function":"pattern","functionOptions":{"notMatch":"\\b(REST|Public|Developer)\\b"}},"x-status":"validated","x-tags":["Info","Filters","Dictionaries"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "info-description":{"description":"API must have a description available.","given":"$.info","severity":"error","recommended":true,"type":"style","formats":["oas3"],"then":{"field":"description","function":"truthy"},"x-status":"validated","x-tags":["Info","Documentation"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "info-license-name":{"description":"API must have a license name applied.","given":"$.info.license","severity":"error","then":{"field":"name","function":"truthy"},"x-status":"validated","x-tags":["License","Legal"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "info-license-url-apache":{"description":"API must have an Apache license applied.","given":"$.info.license.url","severity":"error","then":{"function":"pattern","functionOptions":{"match":"apache.org"}},"x-status":"validated","x-tags":["License","Legal"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "info-license-url-mit":{"description":"API must have a MIT license applied.","given":"$.info.license.url","severity":"error","then":{"function":"pattern","functionOptions":{"match":"mit.edu"}},"x-status":"validated","x-tags":["License","Legal"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "info-license-url":{"description":"API must have a license url applied.","given":"$.info.license","severity":"error","then":{"field":"url","function":"truthy"},"x-status":"validated","x-tags":["License","Legal"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "info-license":{"description":"API must have a license applied.","given":"$.info","severity":"error","recommended":true,"type":"style","formats":["oas3"],"then":{"field":"license","function":"truthy"},"x-status":"validated","x-tags":["Licensing","Legal"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "info-summary-max-length":{"description":"The summary for the API should not be more than 50 characters in length.","given":"$.info","severity":"error","recommended":true,"type":"style","formats":["oas3"],"then":{"field":"summary","function":"length","functionOptions":{"max":50}},"x-status":"validated","x-tags":["Info","Length"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "info-summary-word-check":{"description":"The API summary not contain specific words, including REST, Public, and Developer.","given":"$.info.summary","severity":"error","recommended":true,"type":"style","formats":["oas3"],"then":{"function":"pattern","functionOptions":{"notMatch":"\\b(REST|Public|Developer)\\b"}},"x-status":"validated","x-tags":["Info","Filters","Dictionaries"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "info-summary":{"description":"The API must have a summary applied.","given":"$.info","severity":"error","recommended":true,"type":"style","formats":["oas3"],"then":{"field":"summary","function":"truthy"},"x-status":"validated","x-tags":["Summary","Info"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "info-terms-of-service":{"description":"The API must have a terms of service applied.","given":"$.info","severity":"error","recommended":true,"type":"style","formats":["oas3"],"then":{"field":"termsOfService","function":"truthy"},"x-status":"validated","x-tags":["Terms of Service","Legal"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "info-title-in-kebab-case":{"given":"$.info.title","then":{"function":"pattern","functionOptions":{"match":"^[a-z][a-z0-9\\-]*$"}},"type":"style","recommended":true,"formats":["oas2","oas3"],"message":"Error in the format of the api title","description":"The title of the API must be in kebab case.","severity":"error","x-tags":["Info","Title"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "info-title-max-length":{"description":"The title of the API must not be more than 50 characters.","given":"$.info","severity":"error","recommended":true,"type":"style","formats":["oas3"],"then":{"field":"title","function":"length","functionOptions":{"max":50}},"x-status":"validated","x-tags":["Info","Length"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "info-title-word-check":{"description":"The title of the API must not contain specific words, including REST, Public, and Developer.","given":"$.info.title","severity":"error","recommended":true,"type":"style","formats":["oas3"],"then":{"function":"pattern","functionOptions":{"notMatch":"\\b(REST|Public|Developer)\\b"}},"x-status":"validated","x-tags":["Info","Filters","Dictionaries"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "info-title":{"description":"The API must have a title.","given":"$.info","severity":"error","recommended":true,"type":"style","formats":["oas3"],"then":{"field":"title","function":"truthy"},"x-status":"validated","x-tags":["Info"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "info-version":{"description":"The API must have version information applied.","given":"$.info","severity":"error","recommended":true,"type":"style","formats":["oas3"],"then":{"field":"version","function":"truthy"},"x-status":"validated","x-tags":["Versioning","Info"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "info-x-api-id":{"x-tags":["it","metadata"],"message":"API must have an unique identifier in x-api-id in #/info/x-api-id.","description":"The `#/info/x-api-id` field can be used to associate an identifier\nto an API. This is useful to track an API even when its `#/info/title` changes.","given":"$.info","severity":"error","recommended":true,"type":"style","then":{"field":"x-api-id","function":"truthy"}},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "info-x-audience":{"message":"Missing info.x-audience.","description":"MUST contain API meta information [218]","documentationUrl":"https://opensource.zalando.com/restful-api-guidelines/#218","severity":"error","given":"$.info","then":{"field":"x-audience","function":"truthy"}},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "info-x-summary":{"x-tags":["it","metadata"],"message":"API MUST have an one-liner #/info/x-summary field containing a brief description.","description":"The `#/info/x-summary` can be used to specify a brief, one-liner description of your API: this is very useful for catalog purposes (eg. this can be shown as your API subtitle in catalogs and developer portals). In OAS3.1 you can use the standard `#/info/summary` field.","given":"$.info","severity":"error","recommended":true,"type":"style","formats":["oas3"],"then":{"field":"x-summary","function":"truthy"}},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "integer-format":{"description":"Schema of type number or integer must specify a format to express the associated datatype, eg. `int32`, `int64`, You can express similar requirements using the `minimum` and `maximum` properties. See recommendation RAC_REST_FORMAT_004.","message":"Schema of type number or integer must specify a format. {{path}}","formats":["oas3"],"severity":"error","recommended":true,"given":"$.[?(@.type==\"integer\")]\n","then":{"field":"format","function":"truthy"},"x-status":"draft","x-tags":["Tag"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "language-english":{"severity":"warn","given":"$..description","then":{"function":"english"},"x-status":"draft","x-tags":["Tag"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "missing-ratelimit":{"x-tags":["Tag"],"description":"Ratelimiting API preserves a service and limits attack scenario [see API4:2019 Lack of Resources & Rate Limiting](https://owasp.org/www-project-api-security). ","message":"Missing ratelimit headers. {{property}} {{error}} {{path}}","formats":["oas3"],"severity":"warn","recommended":true,"given":"$.[responses][?(@property[0] == \"2\" )][headers]","then":[{"functionOptions":{"properties":["X-RateLimit-Limit","RateLimit-Limit"]},"function":"xor"},{"functionOptions":{"properties":["X-RateLimit-Remaining","RateLimit-Remaining"]},"function":"xor"},{"functionOptions":{"properties":["X-RateLimit-Reset","RateLimit-Reset"]},"function":"xor"}],"x-status":"draft"},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "missing-retry-after":{"description":"When a client is either:\n* throttled out with a 429 status code;\n* warned about a temporary server issue with a 503 status code;\nthe server should explicitly communicate how long to wait\nbefore issuing further requests using the Retry-After header.\n\nRetry-After is defined in RFC7231.","message":"Missing ratelimit header: {{property}} in {{path}}","formats":["oas3"],"severity":"warn","recommended":true,"given":"$.[responses][?(@property == \"429\" || @property == \"503\"  )][headers]","then":{"field":"Retry-After","function":"truthy"},"x-status":"draft","x-tags":["Tag"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "no-additionalProperties":{"description":"By default, jsonschema allows additionalProperties. This means\nthat schema validators can be bypassed using further, unspecified\nfields. While forbidding additionalProperties can create rigidity and hinder\nthe evolution of an API - eg making it hard to accept new parameters\nor fields - it is possible that this flexibility can be used\nto bypass the schema validator and force the application to process\nunwanted information.","message":"Objects should not allow additionalProperties. Disable them with `additionalProperties: false` or constraint them.","formats":["oas3"],"severity":"warn","recommended":true,"given":["$.[?(@.type==\"object\" && @.additionalProperties==true)]"],"then":[{"field":"additionalProperties","function":"falsy"}],"x-status":"draft","x-tags":["Tag"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "adidas-headers-no-x-headers":{"description":"All HTTP headers SHOULD NOT include X- headers (https//tools.ietf.org/html/rfc6648).","given":"$..parameters[?(@.in == 'header')].name","message":"HTTP headers SHOULD NOT include X- prefix.","recommended":true,"severity":"warn","then":{"function":"pattern","functionOptions":{"notMatch":"/^(x|X)-/"}},"type":"style","x-tags":["Tag"],"x-status":"draft"},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "no-default-additionalProperties":{"description":"By default, jsonschema allows additionalProperties. This means\nthat schema validators can be bypassed using further, unspecified\nfields.  While forbidding additionalProperties can create rigidity and hinder\nthe evolution of an API - eg making it hard to accept new parameters\nor fields - it is possible that this flexibility can be used\nto bypass the schema validator and force the application to process\nunwanted information.","message":"Objects should not allow additionalProperties. Disable them with `additionalProperties: false` or constraint them.","formats":["oas3"],"severity":"warn","recommended":true,"given":["$.[?(@.type==\"object\" && ! @.additionalProperties)]"],"then":[{"field":"additionalProperties","function":"defined"}],"x-status":"draft","x-tags":["Tag"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "no-forbidden-headers":{"x-tags":["Tag"],"description":"OAS do not allow using the following HTTP headers in a specification\nfile: Authorization, Content-Type and Accept.\nYou MUST use the associate functionalities provided by OAS, instead.","message":"{{error}} in {{path}} {{value}}","severity":"error","given":["$..parameters[?(@.in == 'header')].name","$.[responses][*].headers.*~"],"then":{"function":"pattern","functionOptions":{"notMatch":"/^(accept|content-type|authorization)$/i"}},"x-status":"draft"},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "no-http-basic":{"description":"Consider a more secure alternative to HTTP Basic.","message":"HTTP Basic is a pretty insecure way to pass credentials around, please consider an alternative.","severity":"error","given":"$.components.securitySchemes[*]","then":{"field":"scheme","function":"pattern","functionOptions":null,"notMatch":"basic"},"x-status":"draft","x-tags":["Tag"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "no-numeric-ids":{"description":"Please avoid exposing IDs as an integer, UUIDs are preferred.","severity":"error","given":"$.paths..parameters[*].[?(@property === \"name\" && (@ === \"id\" || @.match(/(_id|Id)$/)))]^.schema","then":{"function":"schema","functionOptions":null,"schema":{"type":"object","not":null,"properties":null,"format":{"const":"uuid"}}},"x-status":"draft","x-tags":["Tag"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "no-swagger-2":{"description":"Swagger 2 files are not allowed. Use OpenAPI >= 3.0","given":"$","severity":"error","recommended":true,"type":"style","formats":["oas2"],"then":{"field":"swagger","function":"falsy"},"x-status":"draft","x-tags":["Tag"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "no-x-headers-request":{"x-tags":["Tag"],"description":"'HTTP' headers SHOULD NOT start with 'X-' RFC6648.","severity":"warn","given":["$..parameters[?(@.in == 'header')].name"],"message":"HTTP header '{{value}}' SHOULD NOT start with 'X-' in {{path}}","recommended":true,"type":"style","then":{"function":"pattern","functionOptions":{"match":"/^([^x]|.[^-])|RateLimit-/i"}},"x-status":"draft"},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "no-x-headers-response":{"x-tags":["Tag"],"description":"'HTTP' headers SHOULD NOT start with 'X-' RFC6648.","severity":"warn","given":["$.[responses][*].headers.*~"],"message":"HTTP response header SHOULD NOT start with 'X-' in {{path}}","recommended":true,"type":"style","then":{"function":"pattern","functionOptions":{"match":"/^([^x]|.[^-])|RateLimit-/i"}},"x-status":"draft"},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "no-x-headers":{"description":"Please do not use headers with X-","message":"Headers cannot start with X-, so please find a new name for {{property}}. More: https://tools.ietf.org/html/rfc6648","given":"$..parameters.[?(@.in === 'header')].name","then":{"function":"pattern","functionOptions":{"notMatch":"^(x|X)-"}},"x-status":"draft","x-tags":["Tag"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "no-x-response-headers":{"description":"Please do not use headers with X-","message":"Headers cannot start with X-, so please find a new name for {{property}}. More: https://tools.ietf.org/html/rfc6648","given":"$..headers.*~","then":{"function":"pattern","functionOptions":{"notMatch":"^(x|X)-"}},"x-status":"draft","x-tags":["Tag"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "number-boundaries":{"description":"Numeric values should be limited in size to mitigate resource exhaustion\nusing `maximum` and `minimum`.  If you delegate input validation to a library or framework,\nbe sure to test it thoroughly.","message":"Schema of type number or integer must specify a maximum and a minimum. {{path}} {{error}}","formats":["oas3"],"severity":"warn","recommended":true,"given":["$.[?(@.type==\"number\")]","$.[?(@.type==\"integer\")]"],"then":[{"field":"maximum","function":"defined"},{"field":"minimum","function":"defined"}],"x-status":"draft","x-tags":["Tag"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "number-format":{"x-tags":["Tag"],"description":"Schema of type number or integer must specify a format to express the associated datatype, eg. `int32`, `int64`, ... You can express similar requirements using the `minimum` and `maximum` properties. See recommendation RAC_REST_FORMAT_004.","message":"Schema of type number or integer must specify a format. {{path}}","formats":["oas3"],"severity":"error","recommended":true,"given":"$.[?(@.type==\"number\")]","then":{"field":"format","function":"truthy"},"x-status":"draft"},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "operations-description-length":{"description":"Operation description should be short and sweet, no full stops, and less than 20 characters","given":"$.paths.*[get,post,patch,put,delete]","recommended":true,"then":[{"field":"description","function":"length","functionOptions":{"max":20}}],"type":"style","x-status":"draft","x-tags":["Tag"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "operations-description-words-check":{"description":"Must not contain specific words, including REST, Public, and Developer.","given":"$.paths.*[get,post,patch,put,delete].description","recommended":true,"then":{"function":"pattern","functionOptions":{"notMatch":"\\b(word|word|word)\\b"}},"type":"style","x-status":"validated","x-tags":["Operations","Words"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "operations-description":{"severity":"error","message":"Missing {{property}} at {{path}}.","given":"$.paths.*[get,post,patch,put,delete]","then":[{"field":"description","function":"truthy"}],"x-status":"validated","x-tags":["Operations"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "operations-operationids-camel-case":{"description":"Operation IDs MUST be written in camelCase.","given":"$.paths.*[get,post,patch,put,delete].operationId","message":"{{property}} is not camelCase {{error}}","recommended":true,"then":{"function":"casing","functionOptions":{"type":"camel"}},"type":"style","x-status":"validated","x-tags":["Operations","Casing"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "operations-operationids-kebab-case":{"description":"Operation IDs MUST be written in kebab-case.","given":"$.paths.*[get,post,patch,put,delete].operationId","message":"{{property}} is not kebab-case {{error}}","recommended":true,"then":{"function":"casing","functionOptions":{"type":"kebab"}},"type":"style","x-status":"validated","x-tags":["Operations","Casing"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "operations-operationids-pascal-case":{"description":"Operation IDs MUST be written in PascalCase.","given":"$.paths.*[get,post,patch,put,delete].operationId","message":"{{property}} is not PascalCase {{error}}","recommended":true,"then":{"function":"casing","functionOptions":{"type":"pascal"}},"type":"style","x-status":"validated","x-tags":["Operations","Casing"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "operations-summary-length":{"description":"Operation summary should be short and sweet, no full stops, and less than 20 characters","given":"$.paths.*[get,post,patch,put,delete]","recommended":true,"then":[{"field":"summary","function":"length","functionOptions":{"max":20}}],"type":"style","x-status":"validated","x-tags":["Operations","Length"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "operations-summary-period-none":{"severity":"error","description":"Summary should not have a trailing period","message":"Missing {{property}} at {{path}}.","given":"$.paths[*][*].summary","then":{"function":"pattern","functionOptions":{"notMatch":"\\.$"}},"x-status":"validated","x-tags":["Operations"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "operations-summary-words-check":{"description":"Must not contain specific words, including REST, Public, and Developer.","given":"$.paths.*[get,post,patch,put,delete].summary","recommended":true,"then":{"function":"pattern","functionOptions":{"notMatch":"\\b(word|word|word)\\b"}},"type":"style","x-status":"validated","x-tags":["Operations","Words"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "operations-summary":{"severity":"error","message":"Missing {{property}} at {{path}}.","given":"$.paths.*[get,post,patch,put,delete]","then":[{"field":"summary","function":"truthy"}],"x-status":"validated","x-tags":["Operations"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "operations-tags-one":{"description":"Must have at least one tag.","given":"$","severity":"error","then":{"field":"tags","function":"length","functionOptions":{"min":1}},"type":"style"},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "operations-tags":{"severity":"error","description":"Operation must have tags.","message":"Missing {{property}} at {{path}}.","given":"$.paths.*[get,post,patch,put,delete]","then":[{"field":"tags","function":"truthy"}],"x-status":"validated","x-tags":["Operations","Tags"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "parameters-default-not-allowed":{"description":"A required parameter should not specify a default value.","severity":"warn","given":["$.paths[*].parameters.[?(@.required)]"],"then":{"field":"default","function":"falsy"}},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "parameters-description-length":{"description":"The description can't be more than 20 characters.","given":"$.paths.*.*.parameters[?(@.in=='query')].description","then":{"field":"summary","function":"length","functionOptions":{"max":20}},"x-status":"validated","x-tags":["Parameters","Length"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "parameters-description-word-check":{"description":"Must not contain specific words, including REST, Public, and Developer.","given":"$.paths.*.*.parameters[?(@.in=='query')].description","then":{"function":"pattern","functionOptions":{"notMatch":"\\b(word|word|word)\\b"}},"x-status":"validated","x-tags":["Parameters","Words"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "parameters-description":{"description":"Must not contain specific words, including REST, Public, and Developer.","given":"$.paths.*.*.parameters[?(@.in=='query')]","then":{"field":"description","function":"truthy"},"x-status":"validated","x-tags":["Parameters"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "parameters-example":{"description":"Parameters must have a example.","given":"$.paths.*.*.parameters[?(@.example=='query')]","then":[{"field":"example","function":"truthy"},{"field":"examples","function":"truthy"}],"x-status":"validated","x-tags":["Parameters","Examples"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "parameters-in":{"description":"Parameters must have an in.","given":"$.paths.*.*.parameters[?(@.in=='query')]","then":{"field":"in","function":"truthy"},"x-status":"validated","x-tags":["Parameters"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "parameters-name-camel-case":{"description":"Path and query parmeters must use camelCase.","given":"$.paths.*.*.parameters[?(@.in=='query')].name","then":{"field":"name","function":"casing","functionOptions":{"type":"camel"}},"x-status":"validated","x-tags":["Parameters","Casing"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "parameters-name-length":{"description":"The name can't be more than 20 characters.","given":"$.paths.*.*.parameters[?(@.in=='query')].name","then":{"field":"summary","function":"length","functionOptions":{"max":20}},"x-status":"validated","x-tags":["Parameters","Length"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "parameters-name-pascal-case":{"description":"Path and query parmeters must use PascalCase.","given":"$.paths.*.*.parameters[?(@.in=='query')].name","then":{"field":"name","function":"casing","functionOptions":{"type":"pascal"}},"x-status":"validated","x-tags":["Parameters","Casing"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "parameters-name-snake-case":{"description":"Path and query parmeters must use snake_case.","given":"$.paths.*.*.parameters[?(@.in=='query')].name","then":{"field":"name","function":"casing","functionOptions":{"type":"snake"}},"x-status":"validated","x-tags":["Parameters","Casing"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "parameters-name-word-check":{"description":"Must not contain specific words, including REST, Public, and Developer.","given":"$.paths.*.*.parameters[?(@.in=='query')].name","then":{"function":"pattern","functionOptions":{"notMatch":"\\b(word|word|word)\\b"}},"x-status":"validated","x-tags":["Parameters","Words"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "parameters-name":{"description":"Must not contain specific words, including REST, Public, and Developer.","given":"$.paths.*.*.parameters[?(@.in=='query')]","then":{"field":"name","function":"truthy"},"x-status":"validated","x-tags":["Parameters"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "parameters-schema-type":{"description":"Parameters must have a schema.","given":"$.paths.*.*.parameters[?(@.schema=='query')].schema","then":{"field":"type","function":"truthy"},"x-status":"validated","x-tags":["Parameters","Schema"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "parameters-schema":{"description":"Parameters must have a schema.","given":"$.paths.*.*.parameters[?(@.schema=='query')]","then":{"field":"schema","function":"truthy"},"x-status":"validated","x-tags":["Parameters","Schema"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "paths-base-api-none":{"message":"Path should not start with /api","description":"SHOULD not use /api as base path.","documentationUrl":"https://opensource.zalando.com/restful-api-guidelines/#135","severity":"warn","given":"$.paths.*~","then":{"function":"pattern","functionOptions":{"notMatch":"^/api"}}},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "paths-dashes":{"description":"Paths should not contain dashes.","severity":"error","recommended":true,"message":"Paths cannot contain dashes {{property}}","given":"$.paths[*]~","then":{"function":"pattern","functionOptions":{"notMatch":"/-/"}},"x-status":"validated","x-tags":["Paths"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "paths-lowercase-hyphens":{"message":"Path segments have to be lowercase separate words with hyphens","description":"MUST use lowercase separate words with hyphens for path segments","severity":"error","given":"$.paths.*~","then":{"function":"pattern","functionOptions":{"match":"^(([\\/a-z][a-z0-9\\-\\/]*)?({[^}]*})?)+$"}},"x-status":"validated","x-tags":["Paths"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "paths-method-order":{"severity":"error","given":"$.paths[?(@.get || @.post || @.patch || @.put || @.delete)]","then":{"function":"operationOrdering"},"x-status":"draft","x-tags":["Tag"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "paths-no-empty":{"message":"Empty path segments are not allowed","description":"There should be no empty path segments.","documentationUrl":"https://opensource.zalando.com/restful-api-guidelines/#136","severity":"error","given":"$.paths.*~","then":{"function":"pattern","functionOptions":{"notMatch":"//"}},"x-status":"validated","x-tags":["Tag"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "paths-limit-number-of":{"message":"{{error}}","description":"SHOULD limit number of resource types [146]","documentationUrl":"https://opensource.zalando.com/restful-api-guidelines/#146","severity":"warn","given":"$.paths","then":{"function":"count-resource-types","functionOptions":{"max":1}},"x-status":"draft","x-tags":["Tag"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "paths-subresources-limit-number-of":{"message":"Sub-resource levels should by ","description":"SHOULD limit number of sub-resource levels [147]","documentationUrl":"https://opensource.zalando.com/restful-api-guidelines/#147","severity":"warn","given":"$.paths.*~","then":{"function":"pattern","functionOptions":{"match":"^\\/[^\\/]*((\\/{[^}]*})*\\/[^\\/]*(\\/{[^}]*})*){0,3}\\/?$"}},"x-status":"draft","x-tags":["Tag"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "paths-trailing-slash-none":{"message":"Path with trailing slash is not allowed","description":"All paths must not end with a trailing slash.","documentationUrl":"https://opensource.zalando.com/restful-api-guidelines/#136","severity":"error","given":"$.paths.*~","then":{"function":"pattern","functionOptions":{"notMatch":"/$"}},"x-status":"validated","x-tags":["Tag"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "paths-trailing-slash":{"message":"Path with trailing slash is not allowed","description":"All paths must end with a trailing slash.","documentationUrl":"https://opensource.zalando.com/restful-api-guidelines/#136","severity":"error","given":"$.paths.*~","then":{"function":"pattern","functionOptions":{"match":"/$"}},"x-status":"validated","x-tags":["Tag"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "produces-mime-type-oas2":{"description":"FHIR mime-type must be application/fhir+(xml|json|turtle) or application/x-www-form-urlencoded for search endpoints","severity":"error","recommended":true,"format":"oas2","given":"$..consumes.*","then":{"function":"schema","functionOptions":{"schema":{"type":"string","enum":["application/fhir+xml","application/fhir+json","application/fhir+turtle"]}}},"x-status":"draft","x-tags":["Tag"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "protocol-https-only-oas2":{"description":"ALL requests MUST go through https protocol only","formats":["oas2"],"given":"$","message":"Schemes MUST be https and no other value is allowed.","recommended":true,"severity":"error","then":{"field":"schemes","function":"schema","functionOptions":{"schema":{"items":{"enum":["https"],"type":"string"},"maxItems":1,"type":"array"}}},"type":"style","x-status":"draft","x-tags":["Tag","Adidas"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "protocol-https-only-oas3":{"description":"ALL requests MUST go through `https` protocol only","formats":["oas3"],"given":"$.servers..url","message":"Servers MUST be https and no other protocol is allowed.","severity":"error","then":{"function":"pattern","functionOptions":{"match":"/^https:/"}},"x-status":"draft","x-tags":["Tag"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "request-bodies-components":{"description":"$ref may only point to examples or elements in the components section of openapi.yaml to generate good class names","severity":"error","resolved":false,"given":"$..requestBody..*.$ref","then":{"function":"pattern","functionOptions":{"match":"^.*\\#\\/components\\/schemas.*|examples.*$"}},"x-status":"draft","x-tags":["Tag"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "request-bodies-delete-oas3":{"description":"DELETE methods must have a request body.","given":"$.paths.*.delete","message":"Method must not have a request body {{path}}","recommended":true,"severity":"error","then":{"field":"requestBody","function":"falsy"},"x-status":"validated","x-tags":["Methods"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "request-bodies-get-oas3":{"description":"GET methods must have a request body.","given":"$.paths.*.get","message":"Method must not have a request body {{path}}","recommended":true,"severity":"error","then":{"field":"requestBody","function":"falsy"},"x-status":"validated","x-tags":["Methods"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "request-bodies-patch-media-type-oas3":{"description":"PATCH request bodies must have a application/json media type.","given":"$.paths.*.patch[requestBody].content","message":"application/json is required for PATCH requests {{path}}","recommended":true,"severity":"error","then":{"field":"application/json","function":"truthy"},"x-status":"validated","x-tags":["Methods"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "request-bodies-patch-oas3":{"description":"PATCH methods must have a request body.","given":"$.paths.*.patch","message":"Method must have a request body {{path}}","recommended":true,"severity":"error","then":{"field":"requestBody","function":"truthy"},"x-status":"validated","x-tags":["Methods"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "request-bodies-post-media-type-oas3":{"description":"POST request bodies must have a application/json media type.","given":"$.paths.*.post[requestBody].content","message":"application/json is required for POST requests {{path}}","recommended":true,"severity":"error","then":{"field":"application/json","function":"truthy"},"x-status":"validated","x-tags":["Methods"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "request-bodies-post-oas3":{"description":"POST methods must have a request body.","given":"$.paths.*.post","message":"Method must have a request body {{path}}","recommended":true,"severity":"error","then":{"field":"requestBody","function":"truthy"},"x-status":"validated","x-tags":["Methods"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "request-bodies-put-media-type-oas3":{"description":"PUT request bodies must have a application/json media type.","given":"$.paths.*.put[requestBody].content","message":"application/json is required for PUT requests {{path}}","recommended":true,"severity":"error","then":{"field":"application/json","function":"truthy"},"x-status":"validated","x-tags":["Methods"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "request-bodies-put-oas3":{"description":"PUT methods must have a request body.","given":"$.paths.*.put","message":"Method must have a request body {{path}}","recommended":true,"severity":"error","then":{"field":"requestBody","function":"truthy"},"x-status":"validated","x-tags":["Methods"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "request-bodies-schema-object":{"message":"Top-level data structure must be an object","description":"MUST always return JSON objects as top-level data structures","documentationUrl":"https://opensource.zalando.com/restful-api-guidelines/#110","severity":"error","given":"$.paths.*.*[requestBody]..content..schema","then":{"function":"is-object-schema"},"x-status":"draft","x-tags":["Tag"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "request-forbidden-headers":{"description":"OAS do not allow using the following HTTP headers in a specification\nfile Authorization, Content-Type and Accept. You MUST use the associate functionalities provided by OAS, instead.","given":["$..parameters[?(@.in == 'header')].name"],"message":"{{error}} in {{path}} {{value}}","severity":"error","then":{"function":"pattern","functionOptions":{"notMatch":"/^(accept|content-type|authorization)$/i"}},"x-status":"draft","x-tags":["Tag"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "request-headers-accept":{"description":"FHIR v4.0 is the prefered version","severity":"warn","recommended":true,"format":"oas2","given":"$..headers.Accept","then":{"function":"pattern","functionOptions":{"match":"^.*; fhirVersion=4"}},"x-status":"draft","x-tags":["Tag"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "request-headers-cache-control-documented-oas3":{"description":"Cache usage SHOULD be extensively detailed in the description propertyto avoid data leaks or the dusage of stale data.This rule should ensure in some way that the api providerdocumented extensively the cache usage to avoid data leaksor usage of stale data.For now this ruleset tests* the presence of following keywords  in the description max-age, private, no-store, no-cache.* that one and only one between Expires and  Cache-Control is used.Cache-Control and Expires should not be used in conjuction,because Cache-Control overrides Expires when max-age is set.Instead if neither Cache-Control or Expires are set, clients MAY use euristic cachelike described in RFC7234.å","message":"Cache usage SHOULD be documented when used.","formats":["oas3"],"severity":"warn","recommended":true,"given":"$..[parameters][?(@.in == \"header\" && @.name.match(/Cache-Control/i))]","then":[{"field":"description","function":"truthy"},{"field":"description","function":"pattern","functionOptions":{"match":".*(max-age|private|no-store|no-cache).*"}}],"x-status":"draft","x-tags":["Tag"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "request-headers-cache-responses-indeterminate-behavior-oas3":{"description":"Cache usage SHOULD be extensively detailed in the description propertyto avoid data leaks or the usage of stale data.This rule should ensure in some way that the api providerdocumented extensively the cache usage to avoid data leaksor usage of stale data.For now this ruleset tests* the presence of following keywords  in the description max-age, private, no-store, no-cache.* that one and only one between Expires and Cache-Control is used.Cache-Control and Expires should not be used in conjuction,because Cache-Control overrides Expires when max-age is set.Instead if neither Cache-Control or Expires are set, clients MAY use euristic cachelike described in RFC7234.","message":"{{error}}","formats":["oas3"],"severity":"info","recommended":true,"given":"$.[responses][?(@property[0] == \"2\" )][headers]","then":[{"function":"xor","functionOptions":{"properties":["Expires","Cache-Control"]}}],"x-status":"draft","x-tags":["Tag"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "request-headers-hyphenated-pascal-case":{"description":"All `HTTP` headers MUST use `Hyphenated-Pascal-Case` notation","severity":"error","given":"$..parameters[?(@.in == 'header')].name","message":"'HTTP' headers MUST follow 'Hyphenated-Pascal-Case' notation","type":"style","then":{"function":"pattern","functionOptions":null,"match":"/^([A-Z][a-z0-9]-)*([A-Z][a-z0-9])+/"},"x-status":"draft","x-tags":["Tag"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "request-headers-pascal-case":{"x-tags":["Tag"],"description":"Headers should be pascal-case.\n\nSee Italian recommendation RAC_REST_NAME_003.\n","message":"{{value}} {{error}} in {{path}}","severity":"hint","recommended":true,"given":["$.[parameters][?(@.in==\"header\")].name"],"then":{"function":"casing","functionOptions":{"type":"pascal","separator":{"char":"-"}}},"x-status":"draft"},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "request-headers-x-prefix-oas3":{"description":"Headers must start with X","message":"Headers must start with X-, so please find a new value for {{path}}.","recommended":true,"type":"style","given":"$..parameters.[?(@.in === 'header')].name","severity":"error","resolved":false,"then":{"function":"pattern","functionOptions":{"match":"^(x|X)-"}},"x-status":"draft","x-tags":["Tag"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "response-delete-204-no-body":{"severity":"error","description":"DELETE responses should not have  body.","given":"$paths.delete.responses.204","then":{"field":"cont3ent","function":"truthy"},"x-status":"draft","x-tags":["Methods","Bodies"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "response-delete-204-status-code":{"description":"A delete operation should have a 204 response.","message":"A delete operation should have a 204 response.","severity":"warn","formats":["oas2","oas3"],"given":"$.paths[*].delete.responses","then":{"field":"204","function":"truthy"},"x-status":"validated","x-tags":["Methods","Status Codes"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "response-delete-500-media-type":{"severity":"error","description":"DELETE responses should have a 500 with Problem JSON media type.","given":"$paths.delete.responses.500.content","then":{"field":"application/problem+json","function":"truthy"},"x-status":"draft","x-tags":["Responses"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "response-delete-500-status-code":{"description":"A delete operation should have a 500 response.","message":"A DELETE operation should have a 500 response.","severity":"warn","formats":["oas2","oas3"],"given":"$.paths[*].delete.responses","then":{"field":"500","function":"truthy"},"x-status":"validated","x-tags":["Methods","Status Codes"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "response-forbidden-headers":{"description":"OAS do not allow using the following HTTP headers in a specification\nfile Authorization, Content-Type and Accept. You MUST use the associate functionalities provided by OAS, instead.","given":["$.[responses][*].headers.*~"],"message":"{{error}} in {{path}} {{value}}","severity":"error","then":{"function":"pattern","functionOptions":{"notMatch":"/^(accept|content-type|authorization)$/i"}},"x-status":"draft","x-tags":["Tag"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "response-get-200-media-type":{"severity":"error","description":"GET responses should not have  body.","given":"$paths.get.responses.200.content","then":{"field":"application/json","function":"truthy"},"x-status":"draft","x-tags":["Responses"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "response-get-200-no-body":{"severity":"error","description":"GET responses should not have  body.","given":"$paths.get.responses.200.content","then":{"field":"application/json","function":"truthy"},"x-status":"draft","x-tags":["Responses"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "response-get-200-status-code":{"description":"A get operation should have a 200 response.","message":"A GET operation should have a 200 response.","severity":"warn","formats":["oas2","oas3"],"given":"$.paths[*].get.responses","then":{"field":"200","function":"truthy"},"x-status":"validated","x-tags":["Methods","Status Codes"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "response-get-500-media-type":{"severity":"error","description":"GET responses should have a 500 with Problem JSON media type.","given":"$paths.get.responses.500.content","then":{"field":"application/problem+json","function":"truthy"},"x-status":"draft","x-tags":["Responses"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "response-get-500-status-code":{"description":"A get operation should have a 500 response.","message":"A GET operation should have a 500 response.","severity":"warn","formats":["oas2","oas3"],"given":"$.paths[*].get.responses","then":{"field":"500","function":"truthy"},"x-status":"validated","x-tags":["Methods","Status Codes"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "response-headers-pascal-case":{"x-tags":["Tag"],"description":"Headers should be pascal-case.\n\nSee Italian recommendation RAC_REST_NAME_003.\n","message":"Header {{error}}: {{path}}","severity":"hint","recommended":true,"given":["$.[responses][*].headers.*~"],"then":{"function":"casing","functionOptions":null,"type":"pascal","separator":{"char":"-"}},"x-status":"draft"},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "response-pagination-response-oas2":{"description":"An operation that returns a list that is potentially large should support pagination.","message":"{{error}}","severity":"warn","formats":["oas2"],"given":["$.paths.*[get,post]"],"then":{"function":"pagination-response"},"x-status":"draft","x-tags":["Tag"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "response-post-201-media-type":{"severity":"error","description":"POST responses should have a JSON body.","given":"$paths.post.responses.201.content","then":{"field":"application/json","function":"truthy"},"x-status":"draft","x-tags":["Responses"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "response-post-201-status-code":{"description":"A post operation should have a 201 response.","message":"A POST operation should have a 201 response.","severity":"warn","formats":["oas3"],"given":"$.paths[*].post.responses","then":{"field":"201","function":"truthy"},"x-status":"validated","x-tags":["Methods","Status Codes"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "response-post-500-media-type":{"severity":"error","description":"POST responses should have a 500 with Problem JSON media type.","given":"$paths.post.responses.500.content","then":{"field":"application/problem+json","function":"truthy"},"x-status":"draft","x-tags":["Responses"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "response-post-500-status-code":{"description":"A post operation should have a 500 response.","message":"A POST operation should have a 500 response.","severity":"warn","formats":["oas2","oas3"],"given":"$.paths[*].post.responses","then":{"field":"500","function":"truthy"},"x-status":"validated","x-tags":["Methods","Status Codes"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "response-put-204-no-body":{"severity":"error","description":"PUT responses should not have  body.","given":"$paths.put.responses.204","then":{"field":"content","function":"truthy"},"x-status":"draft","x-tags":["Methods","Bodies"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "response-put-204-status-code":{"description":"A put operation should have a 204 response.","message":"A put operation should have a 204 response.","severity":"warn","formats":["oas2","oas3"],"given":"$.paths[*].delete.responses","then":{"field":"204","function":"truthy"},"x-status":"valiated","x-tags":["Methods","Status Codes"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "response-put-500-media-type":{"severity":"error","description":"PUT responses should have a 500 with Problem JSON media type.","given":"$paths.put.responses.500.content","then":{"field":"application/problem+json","function":"truthy"},"x-status":"draft","x-tags":["Responses"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "response-put-500-status-code":{"description":"A put operation should have a 500 response.","message":"A PUT operation should have a 500 response.","severity":"warn","formats":["oas2","oas3"],"given":"$.paths[*].put.responses","then":{"field":"500","function":"truthy"},"x-status":"validated","x-tags":["Methods","Status Codes"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "response-success-hal-body-oas2":{"description":"All success responses MUST be of media type application/hal+json","formats":["oas2"],"given":"$.paths..responses[?( @property >= 200 && @property < 300 && @property != 204)]","message":"Response documents MUST follow application/hal+json {{error}}","recommended":true,"severity":"error","then":{"field":"schema","function":"schema","functionOptions":{"schema":{"$ref":"./supermodel/adidas/api/HAL.yaml"}}},"type":"style","x-status":"draft","x-tags":["Tag","Adidas"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "response-success-hal-body-oas3":{"description":"All success responses MUST follow application/hal+json schema","formats":["oas3"],"given":"$.paths..responses[?( @property == 200 && @property < 300 && @property != 204)].content[?(@property === \"application/hal+json\")]","message":"Response documents MUST follow application/hal+json schema {{error}}","recommended":true,"severity":"error","then":{"field":"schema","function":"schema","functionOptions":{"schema":{"$ref":"./supermodel/adidas/api/HAL.yaml"}}},"type":"style","x-status":"draft","x-tags":["Tag","Adidas"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "responses-components":{"description":"$ref may only point to examples or elements in the components section of openapi.yaml to generate good class names","severity":"error","resolved":false,"given":"$..responses..*.$ref","then":{"function":"pattern","functionOptions":{"match":"^.*\\#\\/components\\/schemas.*|examples.*$"}},"x-status":"draft","x-tags":["Tag"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "responses-default":{"message":"Operation does not contain a default response","description":"MUST specify success and error responses [151]","documentationUrl":"https://opensource.zalando.com/restful-api-guidelines/#151","severity":"error","given":"$.paths.*.*.responses","then":{"field":"default","function":"truthy"},"x-status":"draft","x-tags":["Tag"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "responses-examples":{"message":"{{error}}","severity":"error","given":"$..responses..[?(@property !== 'properties' && @.examples)]","then":{"function":"schemaPath","functionOptions":{"field":"$.examples.*.value","schemaPath":"$.schema"}},"x-status":"draft","x-tags":["Tag"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "responses-headers-rate-limits-oas3":{"description":"Must posses rate limiting headers.","formats":["oas3"],"given":"$.[responses][?(@property[0] == \"2\" )][headers]","message":"Missing ratelimit headers. {{property}} {{error}} {{path}}","recommended":true,"severity":"warn","then":[{"function":"xor","functionOptions":{"properties":["X-RateLimit-Limit","RateLimit-Limit"]}},{"function":"xor","functionOptions":{"properties":["X-RateLimit-Remaining","RateLimit-Remaining"]}},{"function":"xor","functionOptions":{"properties":["X-RateLimit-Reset","RateLimit-Reset"]}}],"x-status":"draft","x-tags":["Tag","Rate Limits"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "responses-schema-object":{"message":"Top-level data structure must be an object","description":"MUST always return JSON objects as top-level data structures","documentationUrl":"https://opensource.zalando.com/restful-api-guidelines/#110","severity":"error","given":"$.paths.*.*[responses]..content..schema","then":{"function":"is-object-schema"},"x-status":"draft","x-tags":["Tag"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "responses-status-retry-after-oas3":{"description":"When a client is either:\n* throttled out with a 429 status code;\n* warned about a temporary server issue with a 503 status code;\nthe server should explicitly communicate how long to wait\nbefore issuing further requests using the Retry-After header. Retry-After is defined in RFC7231.","formats":["oas3"],"given":"$.[responses][?(@property == \"429\" || @property == \"503\"  )][headers]","message":"Missing ratelimit header: {{property}} in {{path}}","recommended":true,"severity":"warn","then":{"field":"Retry-After","function":"truthy"},"x-status":"draft","x-tags":["Tag"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "schema-description-length":{"description":"All schemas descriptions should be shorter than 20 characters.","message":"Description needs to be less than 20 characters {{ property }}.","severity":"warn","formats":["oas3"],"given":"$.components.schemas.*","then":{"field":"description","function":"length","functionOptions":{"max":20}},"x-status":"validated","x-tags":["Schema"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "schema-description-words":{"description":"Some words should not be be contained within the schema description.","message":"Words should not be contained within description {{ property }}.","severity":"warn","formats":["oas3"],"given":"$.components.schemas.*","then":{"field":"description","function":"pattern","functionOptions":{"notMatch":"\\b(word|word|word)\\b"}},"x-status":"validated","x-tags":["Schema"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "schema-description":{"description":"All schemas properties should have a description.","message":"Should have schema property {{ property }}.","severity":"warn","formats":["oas3"],"given":"$.components.schemas.*","then":{"field":"description","function":"truthy"},"x-status":"validated","x-tags":["Schema"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "schema-names-camel-case":{"description":"Schema names should be camel case.","message":"Schema name should be camel case.","severity":"error","given":"$.components.schemas","then":{"field":"@key","function":"casing","functionOptions":{"type":"camel"}},"x-status":"validated","x-tags":["Schema","Casing"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "schema-names-length":{"description":"Schema names should be no more than 10 characters.","message":"Should be less than 10 characters {{ property }}.","severity":"error","given":"$.components.schemas","then":{"field":"@key","function":"length","functionOptions":{"max":20}},"x-status":"validated","x-tags":["Schema","Length"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "schema-names-pascal-case":{"description":"Schema names should be pascal case.","message":"Schema name should be pascal case.","severity":"error","given":"$.components.schemas","then":{"field":"@key","function":"casing","functionOptions":{"type":"pascal"}},"x-status":"validated","x-tags":["Schema","Casing"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "schema-names-snake-case":{"description":"Schema names should be snake case.","message":"Schema name should be snake case.","severity":"error","given":"$.components.schemas","then":{"field":"@key","function":"casing","functionOptions":{"type":"snake"}},"x-status":"validated","x-tags":["Schema","Casing"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "schema-names-words":{"description":"Schema names should not contain certain words.","message":"Should not contains certain words {{ parameter }}.","severity":"error","given":"$.components.schemas","then":{"field":"@key","function":"pattern","functionOptions":{"notMatch":"\\b(word|word|word)\\b"}},"x-status":"validated","x-tags":["Schema","Words"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "schema-properties-descriptions-length":{"description":"The length of the description needs to be lest than 20 characters.","message":"The description length needs to be less than 20 characters {{ property }}.","severity":"warn","formats":["oas3"],"given":"$..properties.*","then":{"field":"description","function":"length","functionOptions":{"max":20}},"x-status":"validated","x-tags":["Schema"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "schema-properties-descriptions-words":{"description":"Some words should not exist within the property description.","message":"Words should not exist within description {{ property }}.","severity":"warn","formats":["oas3"],"given":"$..properties.*","then":{"field":"description","function":"pattern","functionOptions":{"notMatch":"\\b(word|word|word)\\b"}},"x-status":"validated","x-tags":["Schema"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "schema-properties-descriptions":{"description":"All schemas properties should have a description.","message":"Should have schema property {{ property }}.","severity":"warn","formats":["oas3"],"given":"$..properties.*","then":{"field":"description","function":"truthy"},"x-status":"validated","x-tags":["Schema"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "schema-properties-maximum":{"description":"All schemas properties should have a maximum.","message":"Should have schema property {{ property }}.","severity":"warn","formats":["oas3"],"given":"$..properties.*","then":{"field":"maximum","function":"truthy"},"x-status":"validated","x-tags":["Schema"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "schema-properties-minimum":{"description":"All schemas properties should have a minimum.","message":"Should have schema property {{ property }}.","severity":"warn","formats":["oas3"],"given":"$..properties.*","then":{"field":"minimum","function":"truthy"},"x-status":"validated","x-tags":["Schema"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "schema-properties-names-camel-case":{"description":"Schema property names should be camel case.","message":"Schema name should be camel case.","severity":"error","given":"$..properties.*","then":{"field":"@key","function":"casing","functionOptions":{"type":"camel"}},"x-status":"validated","x-tags":["Schema","Casing"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "schema-properties-names-length":{"description":"Schema property names should be no more than 10 characters.","message":"Should be less than 10 characters {{ property }}.","severity":"error","given":"$..properties.*","then":{"field":"@key","function":"length","functionOptions":{"max":20}},"x-status":"validated","x-tags":["Schema","Length"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "schema-properties-names-pascal-case":{"description":"Schema property names should be pascal case.","message":"Schema name should be pascal case.","severity":"error","given":"$..properties.*","then":{"field":"@key","function":"casing","functionOptions":{"type":"pascal"}},"x-status":"validated","x-tags":["Schema","Casing"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "schema-properties-names-snake-case":{"description":"Schema property names should be snake case.","message":"Schema name should be snake case.","severity":"error","given":"$..properties.*","then":{"field":"@key","function":"casing","functionOptions":{"type":"snake"}},"x-status":"validated","x-tags":["Schema","Casing"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "schema-properties-names-words":{"description":"Schema property names should not contain certain words.","message":"Should not contains certain words {{ parameter }}.","severity":"error","given":"$..properties.*","then":{"field":"@key","function":"pattern","functionOptions":{"notMatch":"\\b(word|word|word)\\b"}},"x-status":"validated","x-tags":["Schema","Words"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "schema-properties-type":{"description":"All schemas properties should have a type.","message":"Should have schema property {{ property }}.","severity":"warn","formats":["oas3"],"given":"$..properties.*","then":{"field":"type","function":"truthy"},"x-status":"validated","x-tags":["Schema"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "schema-properties":{"description":"All schemas should have a properties.","message":"Should have schema properties {{ property }}.","severity":"error","formats":["oas3"],"given":"$.components.schemas.*","then":{"field":"properties","function":"truthy"},"x-status":"validated","x-tags":["Schema"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "schema-required":{"description":"All schemas properties should have a required.","message":"Should have schema property {{ property }}.","severity":"warn","formats":["oas3"],"given":"$.components.schemas.*","then":{"field":"required","function":"truthy"},"x-status":"validated","x-tags":["Schema"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "schema-type":{"description":"All schemas should have a type.","message":"Should have schema {{ property }}.","severity":"error","formats":["oas3"],"given":"$.components.schemas.*","then":{"field":"type","function":"truthy"},"x-status":"validated","x-tags":["Schema"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "security-protection-get":{"description":"Your API should be protected by a `security` rule either at global or operation level. Operations should be protected specially when they are tied to non-idempotent HTTP methods like `POST`, `PUT`, `PATCH` and `DELETE`. This is done with one or more non-empty `security` rules. Security rules are defined in the `securityScheme` section. An example of a security rule applied at global level.","message":"The following operation is not protected by a `security` rule: {{path}}","formats":["oas3"],"severity":"info","recommended":true,"given":["$.paths.*.get"],"then":[{"field":"security","function":"schema","functionOptions":{"schema":null,"items":{"type":"object","minProperties":1},"minItems":1,"type":"array"}}],"x-status":"draft","x-tags":["Tag"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "security-protection-non-idempotent":{"description":"Your API should be protected by a `security` rule either at global or operation level. Operations should be protected specially when they are tied to non-idempotent HTTP methods like `POST`, `PUT`, `PATCH` and `DELETE`. This is done with one or more non-empty `security` rules. Security rules are defined in the `securityScheme` section. An example of a security rule applied at global level.","message":"The following non-idempotent operation is not protected by a `security` rule: {{path}}","formats":["oas3"],"severity":"error","recommended":true,"given":["$.paths.*[?(@property.match(/^(post|put|patch|delete)/))]"],"then":[{"field":"security","function":"schema","functionOptions":{"schema":null,"items":{"type":"object","minProperties":1},"minItems":1,"type":"array"}}],"x-status":"draft","x-tags":["Tag"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "security-schemes-jwt":{"description":"Json Web Tokens RFC7519 is a compact, URL-safe means of representing claims to be transferred between two parties. JWT can be enclosed in encrypted or signed tokens like JWS and JWE. ","given":["$.[securitySchemes][?(@.bearerFormat==\"jwt\" || @.bearerFormat==\"JWT\")]"],"message":"JWT usage should be detailed in `description` {{error}}.","then":[{"field":"description","function":"truthy"},{"field":"description","function":"pattern","functionOptions":{"match":".*RFC8725.*"}}],"x-status":"draft","x-tags":["Tag"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "security-schemes-oauth-allowed-flows":{"description":"The OAuth2 authorization framework defines various [grant types](https://tools.ietf.org/html/rfc6749#section-1.3), most notably the [AuthorizationCode](https://tools.ietf.org/html/rfc6749#section-1.3.1) and the [Client Credentials](https://tools.ietf.org/html/rfc6749#section-1.3.4). Some grant types are now considered insecure and MUST not be used, including `implicit` and `password`. The new [OAuth2.1](https://tools.ietf.org/html/draft-ietf-oauth-v2-1-01)  still in draft, removes them and suggests to replace the `implicit` with `authorizationCode` + PKCE defined in RFC7636.","message":"Do not use oauth2 insecure flow: \"{{property}}\".","formats":["oas3"],"severity":"error","recommended":true,"given":["$.[?(@.type==\"oauth2\")].flows"],"then":[{"field":"implicit","function":"falsy"},{"field":"password","function":"falsy"}],"x-status":"draft","x-tags":["Tag"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "security-schemes-oauth-https":{"description":"OAuth2 endpoints must use `https://`","message":"OAuth endpoints must use https://","formats":["oas3"],"severity":"error","recommended":true,"given":["$.[securitySchemes][?(@.type==\"oauth2\")][*].[?(@property.match(/url$/i))]"],"then":[{"field":"value","function":"pattern","functionOptions":{"match":"^https://"}}],"x-status":"draft","x-tags":["Tag"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "securitySchemes-jwt":{"description":"Json Web Tokens RFC7519 is a compact, URL-safe means of representing claims to be transferred between two parties. JWT can be enclosed in encrypted or signed tokens like JWS and JWE. The [JOSE IANA registry](https://www.iana.org/assignments/jose/jose.xhtml) provides algorithms information. RFC8725 describes common pitfalls in the JWx specifications and in their implementations.","message":"JWT usage should be detailed in `description` {{error}}.","given":["$.[securitySchemes][?(@.bearerFormat==\"jwt\" || @.bearerFormat==\"JWT\")]"],"then":[{"field":"description","function":"truthy"},{"field":"description","function":"pattern","functionOptions":{"match":".*RFC8725.*"}}],"x-status":"draft","x-tags":["Tag"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "securitySchemes-oauth-allowed-flows":{"description":"The OAuth2 authorization framework defines various [grant types](https://tools.ietf.org/html/rfc6749#section-1.3), most notably the [AuthorizationCode](https://tools.ietf.org/html/rfc6749#section-1.3.1) and the [Client Credentials](https://tools.ietf.org/html/rfc6749#section-1.3.4). Some grant types are now considered insecure and MUST not be used, including `implicit` and `password`. The new [OAuth2.1](https://tools.ietf.org/html/draft-ietf-oauth-v2-1-01)  still in draft, removes them and suggests to replace the `implicit` with `authorizationCode` + PKCE defined in RFC7636.","message":"Do not use oauth2 insecure flow: \"{{property}}\".","formats":["oas3"],"severity":"error","recommended":true,"given":["$.[?(@.type==\"oauth2\")].flows"],"then":[{"field":"implicit","function":"falsy"},{"field":"password","function":"falsy"}],"x-status":"draft","x-tags":["Tag"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "securitySchemes-oauth-http":{"description":"OAuth2 endpoints must use `https://`","message":"OAuth endpoints must use https://","formats":["oas3"],"severity":"error","recommended":true,"given":["$.[securitySchemes][?(@.type==\"oauth2\")][*].[?(@property.match(/url$/i))]"],"then":[{"field":"value","function":"pattern","functionOptions":{"match":"^https://"}}],"x-status":"draft","x-tags":["Tag"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "securitySchemes-oauth":{"description":"Json Web Tokens RFC7519 is a compact, URL-safe means of representing claims to be transferred between two parties. JWT can be enclosed in encrypted or signed tokens like JWS and JWE. The [JOSE IANA registry](https://www.iana.org/assignments/jose/jose.xhtml) provides algorithms information. RFC8725 describes common pitfalls in the JWx specifications and in their implementations.","message":"JWT usage should be detailed in `description` {{error}}.","given":["$.[securitySchemes][?(@.type==\"oauth2\")]"],"then":[{"field":"description","function":"truthy"},{"field":"description","function":"pattern","functionOptions":{"match":".*RFC8725.*"}}],"x-status":"draft","x-tags":["Tag"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "servers-description":{"x-tags":["Tag"],"description":"Servers must have a description.","formats":["oas3"],"given":["$.servers[*]","$.paths..servers"],"severity":"error","then":{"field":"description","function":"truthy"},"x-status":"draft"},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "servers-must-exist-oas3":{"description":"OpenAPI servers must be present and non-empty array.","severity":"error","formats":["oas3"],"given":"$","then":{"field":"servers","function":"schema","functionOptions":{"schema":{"items":{"type":"object"},"minItems":1,"type":"array"}}},"x-status":"draft","x-tags":["Tag"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "servers-url-mock-oas3":{"description":"Mock API server must be the first one so that Postman import uses it.","severity":"error","formats":["oas3"],"given":"$.servers[0].url","then":{"function":"pattern","functionOptions":{"match":"http://localhost:4010"}},"x-status":"draft","x-tags":["Tag"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "servers-use-https":{"x-tags":["Tag"],"description":"Servers must use https to ensure the origin of the responses\nand protect the integrity and the  confidentiality of the communication.\n\nYou can use `http://` only on sandboxes environment.\nUse `x-sandbox: true` to skip this kind of check.","message":"Non-sandbox url  {{value}} {{error}}. Add `x-sandbox: true` to skip this check on a specific server.","given":["$.servers[?(@[\"x-sandbox\"] != true)]","$.paths..servers[?(@[\"x-sandbox\"] != true)]"],"severity":"error","recommended":true,"then":{"field":"url","function":"pattern","functionOptions":null,"match":"^https://.*"},"x-status":"draft"},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "string-pattern-or-format-or-enum":{"description":"String length should be limited to avoid an attacker to send very long strings to your service.","message":"Strings (non enum) must specify a pattern or a format. {{path}}","formats":["oas3"],"severity":"hint","recommended":true,"given":["$.[?(@.type==\"string\" && !@.enum && @.format!=\"date\" && @.format!=\"date-time\" )]"],"then":{"function":"schema","functionOptions":null,"schema":{"type":"object","anyOf":[{"required":["pattern"]},{"required":["format"]}],"additionalProperties":true}},"x-status":"draft","x-tags":["Tag"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "tags-description":{"description":"Tags must have a description.","given":"$.tags[*]","severity":"error","then":{"field":"description","function":"truthy"},"x-status":"validated","x-tags":["Tag"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "tags-name":{"description":"Tags must have a name.","given":"$.tags[*]","severity":"error","then":{"field":"name","function":"truthy"},"x-status":"validated","x-tags":["Tags"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "tags-object":{"description":"Must have tags object.","given":"$","severity":"error","then":{"field":"tags","function":"truthy"},"x-status":"validated","x-tags":["Tags"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "tags-one":{"description":"Must have at least one tag.","given":"$","severity":"error","then":{"field":"tags","function":"length","functionOptions":{"min":1}},"type":"style","x-status":"validated","x-tags":["Tags"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "unknown-error-format":{"description":"Every error response SHOULD support either RFC 7807 (https://tools.ietf.org/html/rfc6648) or the JSON:API Error format.","formats":["oas3"],"severity":"warn","given":"$.paths.[*].responses[?(@property.match(/^(4|5)/))].content.*~","then":{"function":"enumeration","functionOptions":null,"values":["application/vnd.api+json","application/problem+xml","application/problem+json"]},"x-status":"draft","x-tags":["Tag"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "use-problem-json-for-errors":{"description":"Error management is a key enabler of a resilient API ecosystem. Enforcing a consistent schema for errors between different APIs, enables client to properly implement an error management strategy, with positive impacts for users.","message":"Error responses should support RFC7807 in {{path}}.","formats":["oas3"],"severity":"error","given":"$.paths.[*].responses[?(@property.match(/^(4|5|default)/))].content.*~","then":{"function":"enumeration","functionOptions":{"values":["application/problem+xml","application/problem+json"]},"x-status":"draft","x-tags":["Tag"]}},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "version-date-format":{"severity":"error","recommended":true,"message":"Specs should follow inception date based versioning eg. 2020-01-01. {{value}} is not a valid version.","given":"$.info.version","then":{"function":"pattern","functionOptions":{"match":"^([0-9]{4}-[0-9]{2}-[0-9]{2})$"}},"x-status":"draft","x-tags":["Tag"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "version-openapi":{"description":"OpenAPI specification version must be 3.0.3.","severity":"error","given":"$","then":{"field":"openapi","function":"pattern","functionOptions":{"match":"3.0.3"}},"x-status":"draft","x-tags":["Tag"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "version-query-parameter-oas2":{"description":"Specify API version using api-version query parameter, not in path.","message":"{{error}}","severity":"warn","formats":["oas2"],"given":"$","then":{"function":"version-policy"},"x-status":"draft","x-tags":["Tag"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "version-segment-second":{"description":"The second path segment should be a whole-number version like v1.","given":"$.paths","then":{"field":"@key","function":"pattern","functionOptions":{"match":"^/[^/]+/v\\d+/.+$"}},"x-status":"draft","x-tags":["Tag"]},
        
    
        
    
        
    
        
    
        
    
        
    

    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
    
        
        "allowed-currency-format":{"description":"currency must fit the ISO standard","message":"{{error}}","recommended":true,"type":"style","given":"$.[?(/~*/.test(@.currency))].*.currency","severity":"error","resolved":false,"then":{"function":"checkCurrency"},"x-status":"draft","x-tags":["Currency","Formats"]},
        
    
        
    
        
    
        
    
        
    
        
    

}]